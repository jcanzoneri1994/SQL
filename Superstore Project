//This SQL project utilizes data from a superstore listed below:

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);

1. Use a select statement to order items by price.
SELECT item_name, price
FROM superstore
ORDER BY price DESC;

2. What is the most expensive item sold in the furnishings category?
SELECT MAX(price), item_name
FROM superstore
WHERE category = "Furnishings";

3. Calculate the amount of kitchen supplies items in the superstore.
SELECT SUM(stock_quantity)
FROM superstore
WHERE category = "Kitchen Supplies";

4. How many air purifiers are in the superstore?
SELECT stock_quantity
FROM superstore
WHERE item_name = "Air Purifier";

5. Calculate the average price of all electronics products.
SELECT AVG(price)
FROM superstore
WHERE category = "Electronics";

6. Calculate the average ratings of each category of products sold in descending order.
SELECT category, AVG(average_rating)
FROM superstore
GROUP BY category
ORDER BY AVG(average_rating) DESC;

7. What are the most expensive items sold in each category?
SELECT item_name, category, MAX(price)
FROM superstore
GROUP BY category
ORDER BY MAX(price) DESC;

8. What are the least expensive items sold in each category?
SELECT item_name, category, MIN(price)
FROM superstore
GROUP BY category
ORDER BY MIN(price) DESC;

9. Calculate the revenue for each product sold in descending order.
SELECT item_name, stock_quantity, (stock_quantity*price) AS revenue
FROM superstore
ORDER BY revenue DESC;

10. What is the average stock quantity in each category of products sold?
SELECT category, AVG(stock_quantity)
FROM superstore
GROUP BY category
ORDER BY AVG(stock_quantity);

11. List all the products sold in order of their average ratings.
SELECT item_name, average_rating
FROM superstore
ORDER BY average_rating DESC;
